{
    "contents" : "\nNWISPullR <- function(STAID)\n{\n#Change to a list that SQL can understand. SQL requires a parenthesized list of expressions, so must look like c('05325000', '05330000') for example\nSTAID.list <- paste(\"'\", STAID, \"'\", sep=\"\", collapse=\",\")\n\n# Open the odbc connection\nChan1 <- odbcConnect(DSN)\n\n##################\n###DATABASE 1#####\n##################\n# First get the site info--need column SITE_ID\nQuery <- paste(\"select * from \", DSN, \".SITEFILE_01 where site_no IN (\", STAID.list, \")\", sep=\"\")\nSiteFile <- sqlQuery(Chan1, Query, as.is=T)\n\n#get the record numbers\nQuery <- paste(\"select * from \", DSN, \".QW_SAMPLE_01 where site_no IN (\", STAID.list, \")\", sep=\"\")\nSamples <- sqlQuery(Chan1, Query, as.is=T)\n\n#get the QWResult file using the record numbers\nrecords.list <- paste(\"'\", Samples$RECORD_NO, \"'\", sep=\"\", collapse=\",\")\nQuery <- paste(\"select * from \", DSN, \".QW_RESULT_01 where record_no IN (\", records.list, \")\", sep=\"\")\nResults <- sqlQuery(Chan1, Query, as.is=T)\nResults$Val_qual <- paste(Results$RESULT_VA,Results$REMARK_CD, sep = \" \")\nResults$Val_qual <- gsub(\"NA\",\"\",Results$Val_qual)\n\n#Get list of parm names\nparms.list <- paste(\"'\", unique(Results$PARM_CD), \"'\", sep=\"\", collapse=\",\")\n\nQuery <- paste(\"select * from \", DSN, \".PARM where PARM_CD IN (\", parms.list, \")\", sep=\"\")\nparms <- sqlQuery(Chan1, Query, as.is=T)\nparms <- parms[c(\"PARM_CD\",\"PARM_NM\")]\n\n#station names and dates\nname_num <- SiteFile[c(\"SITE_NO\",\"STATION_NM\")]\nSample_meta <- join(Samples, name_num,by=\"SITE_NO\")\nSample_meta <- Sample_meta[c(\"SITE_NO\",\"STATION_NM\",\"SAMPLE_START_DT\",\"MEDIUM_CD\",\"RECORD_NO\")]\n#join tables so parm names are together\nResults<- join(Results,parms,by=\"PARM_CD\")\n\n#Make dataframe as record number and pcode. MUST HAVE ALL UNIQUE PCODE NAMES\nDataTable1 <- dcast(Results, RECORD_NO ~ PARM_NM ,value.var = c(\"Val_qual\"))\n\n#fill in record number meta data (statoin ID, name, date, time)\nDataTable1 <- join(DataTable1,Sample_meta, by=\"RECORD_NO\")\n\n#reorder columns so meta data is at front\nparmcols <- seq(from =1, to =ncol(DataTable1)-4 )\nmetacols <- seq(from = ncol(DataTable1)-3, to =ncol(DataTable1))\nDataTable1 <- DataTable1[c(metacols,parmcols)]\nPlotTable1 <- join(Results,Sample_meta,by=\"RECORD_NO\")\n\n##################\n###DATABASE 2#####\n##################\n# First get the site info--need column SITE_ID\nQuery <- paste(\"select * from \", DSN, \".SITEFILE_02 where site_no IN (\", STAID.list, \")\", sep=\"\")\nSiteFile <- sqlQuery(Chan1, Query, as.is=T)\n\n#get the record numbers\nQuery <- paste(\"select * from \", DSN, \".QW_SAMPLE_02 where site_no IN (\", STAID.list, \")\", sep=\"\")\nSamples <- sqlQuery(Chan1, Query, as.is=T)\n\n#get the QWResult file using the record numbers\nrecords.list <- paste(\"'\", Samples$RECORD_NO, \"'\", sep=\"\", collapse=\",\")\nQuery <- paste(\"select * from \", DSN, \".QW_RESULT_02 where record_no IN (\", records.list, \")\", sep=\"\")\nResults <- sqlQuery(Chan1, Query, as.is=T)\nResults$Val_qual <- paste(Results$RESULT_VA,Results$REMARK_CD, sep = \" \")\nResults$Val_qual <- gsub(\"NA\",\"\",Results$Val_qual)\n\n#Get list of parm names\nparms.list <- paste(\"'\", unique(Results$PARM_CD), \"'\", sep=\"\", collapse=\",\")\n\nQuery <- paste(\"select * from \", DSN, \".PARM where PARM_CD IN (\", parms.list, \")\", sep=\"\")\nparms <- sqlQuery(Chan1, Query, as.is=T)\nparms <- parms[c(\"PARM_CD\",\"PARM_NM\")]\n\n#station names and dates\nname_num <- SiteFile[c(\"SITE_NO\",\"STATION_NM\")]\nSample_meta <- join(Samples, name_num,by=\"SITE_NO\")\nSample_meta <- Sample_meta[c(\"SITE_NO\",\"STATION_NM\",\"SAMPLE_START_DT\",\"MEDIUM_CD\",\"RECORD_NO\")]\n#join tables so parm names are together\nResults<- join(Results,parms,by=\"PARM_CD\")\n\n#Make dataframe as record number and pcode. MUST HAVE ALL UNIQUE PCODE NAMES\nDataTable2 <- dcast(Results, RECORD_NO ~ PARM_NM,value.var = \"Val_qual\")\n\n#fill in record number meta data (statoin ID, name, date, time)\nDataTable2 <- join(DataTable2,Sample_meta, by=\"RECORD_NO\")\n\n#reorder columns so meta data is at front\nparmcols <- seq(from =1, to =ncol(DataTable2)-4 )\nmetacols <- seq(from = ncol(DataTable2)-3, to =ncol(DataTable2))\nDataTable2 <- DataTable2[c(metacols,parmcols)]\nPlotTable2 <- join(Results,Sample_meta,by=\"RECORD_NO\")\n\nDataTable <- rbind.fill(DataTable1,DataTable2)\nPlotTable <- rbind.fill(PlotTable1,PlotTable2)\nPlotTable$REMARK_CD <- gsub(\"NA\",\"\",PlotTable$REMARK_CD)\nPlotTable$SAMPLE_START_DT <- as.POSIXct(PlotTable$SAMPLE_START_DT)\nPlotTable$REMARK_CD[is.na(PlotTable$REMARK_CD)] <- \"Sample\"\nPlotTable$REMARK_CD <- as.factor(PlotTable$REMARK_CD)\nPlotTable$REMARK_CD = factor(PlotTable$REMARK_CD,levels(PlotTable$REMARK_CD)[c(4,1:3)])\n\nPlotTable$RESULT_VA <- as.numeric(PlotTable$RESULT_VA)\n# Close the connection\nodbcClose(Chan1)\n\n\nreturn(list(DataTable=DataTable,PlotTable=PlotTable))\n\n}\n\n",
    "created" : 1408461775755.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "529220916",
    "id" : "F561EDD9",
    "lastKnownWriteTime" : 1408637422,
    "path" : "Z:/tmills/Dinero/2014/Spring/SpringNWIS/ODBCQWData.R",
    "project_path" : "ODBCQWData.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}