library(USGSwsQW)
PlotR(PlotData,"test")
dev.off()
dev.off()
source('~/.active-rstudio-document')
PlotR(PlotData,"test")
dev.off()
source('~/.active-rstudio-document')
PlotR(PlotData,"test")
dev.off()
source('~/.active-rstudio-document')
source('Z:/tmills/Dinero/2014/Spring/SpringNWIS/ODBCQWData.R')
sites <- unique(PlotData$SITE_NO)
numsites <- length(sites)
sitenames <- unique(PlotData$SITE_NM)
View(PlotData)
sitenames <- unique(PlotData$STATION_NM)
for (k in 1:numsites)
{
Plotdata <- subset(PlotData, SITE_NO == sites[k])
PlotR(PlotData,sitenames[k])
}
measparms <- unique(PlotData$PARM_CD)
numparms <- length(measparms)
i <- 10
Plotdata <- subset(Plotdata, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
View(Plotdata)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<","E","M"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
p1
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<","E","M"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<","E","M"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
Plotdata <- subset(Plotdata, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<","E","M"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
dev.off()
dev.off()
p1
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation",  values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
levels(PlotData$REMARK_CD)
PlotData$REMARK_CD <- as.factor(PlotData$REMARK_CD)
levels(PlotData$REMARK_CD)
PlotData$REMARK_CD = factor(PlotData$REMARK_CD,levels(PlotData$REMARK_CD)[c(4,1:3)])
levels(PlotData$REMARK_CD)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
Plotdata <- subset(Plotdata, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
p1
Plotdata <- subset(PlotData, SITE_NO == sites[k])
Plotdata <- subset(Plotdata, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
View(PlotData)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
if (nrow(subset(Plotdata, REMARK_CD =="Sample")) > 5)
{
p1 <- p1 + stat_smooth(data = subset(Plotdata, REMARK_CD =="Sample"),method="loess")
}
print(p1)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
if (nrow(subset(Plotdata, REMARK_CD =="Sample")) > 5)
{
p1 <- p1 + stat_smooth(data = subset(Plotdata, REMARK_CD =="Sample"),method="loess", se= FALSE)
}
print(p1)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
sites <- unique(PlotData$SITE_NO)
numsites <- length(sites)
sitenames <- unique(PlotData$STATION_NM)
for (k in 1:numsites)
{
Plotdata <- subset(PlotData, SITE_NO == sites[k])
PlotR(PlotData,sitenames[k])
}
source('Z:/tmills/Dinero/2014/Spring/SpringNWIS/ODBCQWData.R')
sites <- unique(PlotData$SITE_NO)
numsites <- length(sites)
sitenames <- unique(PlotData$STATION_NM)
for (k in 1:numsites)
{
Plotdata <- subset(PlotData, SITE_NO == sites[k])
PlotR(PlotData,sitenames[k])
}
sites[k]
Plotdata <- subset(PlotData, SITE_NO == sites[k])
View(Plotdata)
sites <- unique(PlotData$SITE_NO)
numsites <- length(sites)
sitenames <- unique(PlotData$STATION_NM)
for (k in 1:numsites)
{
PlotData <- subset(PlotData, SITE_NO == sites[k])
PlotR(PlotData,sitenames[k])
}
Plotdata <- subset(Plotdata, PARM_CD == measparms[i])
View(Plotdata)
source('~/.active-rstudio-document')
DSN <- "NWISCO"
# get station IDs
QWsample <- read.table("PCFF/qwsample.20140801.095520",header=FALSE,colClasses = "character")
#Get staiton IDs
STAID <- QWsample[[2]]
# Set the range of dates in POSIX format,
# set BEGIN to "" to retrieve data from the earliest record
# set END to "" to retrieve data to the most current record
BEGIN <- "2014-05-01"
END <- "2014-08-18"
#------ end of user input
Tables <- NWISPullR(STAID)
PlotData <- Tables$PlotTable
PlotData$SAMPLE_START_DT <- as.POSIXct(PlotData$SAMPLE_START_DT)
PlotData$REMARK_CD[is.na(PlotData$REMARK_CD)] <- "Sample"
PlotData$REMARK_CD <- as.factor(PlotData$REMARK_CD)
PlotData$REMARK_CD = factor(PlotData$REMARK_CD,levels(PlotData$REMARK_CD)[c(4,1:3)])
PlotData$RESULT_VA <- as.numeric(PlotData$RESULT_VA)
TableData <- Tables$DataTable
sites <- unique(PlotData$SITE_NO)
numsites <- length(sites)
sitenames <- unique(PlotData$STATION_NM)
for (k in 1:numsites)
{
PlotData <- subset(PlotData, SITE_NO == sites[k])
PlotR(Data,sitenames[k])
}
for (k in 1:numsites)
{
Data <- subset(PlotData, SITE_NO == sites[k])
PlotR(Data,sitenames[k])
}
source('~/.active-rstudio-document')
# Set the DSN for the nwis database
DSN <- "NWISCO"
# get station IDs
QWsample <- read.table("PCFF/qwsample.20140801.095520",header=FALSE,colClasses = "character")
#Get staiton IDs
STAID <- QWsample[[2]]
# Set the range of dates in POSIX format,
# set BEGIN to "" to retrieve data from the earliest record
# set END to "" to retrieve data to the most current record
BEGIN <- "2014-05-01"
END <- "2014-08-18"
#------ end of user input
Tables <- NWISPullR(STAID)
PlotData <- Tables$PlotTable
PlotData$SAMPLE_START_DT <- as.POSIXct(PlotData$SAMPLE_START_DT)
PlotData$REMARK_CD[is.na(PlotData$REMARK_CD)] <- "Sample"
PlotData$REMARK_CD <- as.factor(PlotData$REMARK_CD)
PlotData$REMARK_CD = factor(PlotData$REMARK_CD,levels(PlotData$REMARK_CD)[c(4,1:3)])
PlotData$RESULT_VA <- as.numeric(PlotData$RESULT_VA)
TableData <- Tables$DataTable
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
PlotR(PlotData)
dev.off()
measparms <- unique(Data$PARM_CD)
Data <- PlotData
measparms <- unique(Data$PARM_CD)
numparms <- length(measparms)
sites <- unique(Data$SITE_NO)
numsites <- length(sites)
k <- 2
SiteData <- subset(Data, SITE_NO == sites[k])
filename <- unique(SiteData$STATION_NM)
View(SiteData)
k <- 1
SiteData <- subset(Data, SITE_NO == sites[k])
filename <- unique(SiteData$STATION_NM)
View(SiteData)
i
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
}
dev.off()
measparms
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(PlotData[1] != 0))
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
dev.off()
i <- 57
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
View(Plotdata)
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(PlotData[1] > 1))
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
dev.off()
i <- 57
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
p1
length(PlotData[1]
length(PlotData[1])
length(PlotData[1])
length(PlotData[1] > 1
df
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(PlotData[1]) > 1)
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
dev.off()
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
i
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
dev.off()
dev.off()
dev.off()
dev.off()
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(PlotData[1]) > 1)
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
dev.off()
View(SiteData)
i <- 2
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(PlotData[1]) > 1)
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
dev.off()
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(Plotdata[1]) > 1)
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
i <- 1
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
View(Plotdata)
length(Plotdata[1])
View(Plotdata)
Plotdata[1]
length(Plotdata[1])
length(Plotdata$RESULT_VA)
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(Plotdata$RESULT_VA) > 1)
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
dev.off()
dev.off()
setPDF("landscape",filename)
for (i in 1:numparms)
{
Plotdata <- subset(SiteData, PARM_CD == measparms[i])
ylabel <- str_wrap(unique(Plotdata$PARM_NM), width = 75)
maintitle <- str_wrap(unique(Plotdata$STATION_NM), width = 75)
if (length(Plotdata$RESULT_VA) > 1)
{
p1 <- ggplot(Plotdata,  aes(SAMPLE_START_DT, RESULT_VA, shape = REMARK_CD, color = MEDIUM_CD)) +
geom_point(size = 3) + scale_shape_manual("Explanation", labels = c("Sample", "<",">","E"), values = c(19,0,2,4)) +
xlab("Date") +
ylab(paste(ylabel,"\n")) +
theme_USGS() + ggtitle(maintitle)
print(p1)
} else{}
}
dev.off()
PlotR(PlotData)
dev.off()
source('Z:/tmills/Dinero/2014/Spring/SpringNWIS/ODBCQWData.R')
DSN <- "NWISCO"
# get station IDs
QWsample <- read.table("PCFF/qwsample.20140801.095520",header=FALSE,colClasses = "character")
#Get staiton IDs
STAID <- QWsample[[2]]
# Set the range of dates in POSIX format,
# set BEGIN to "" to retrieve data from the earliest record
# set END to "" to retrieve data to the most current record
BEGIN <- "2014-05-01"
END <- "2014-08-18"
#------ end of user input
Tables <- NWISPullR(STAID)
PlotData <- Tables$PlotTable
PlotData$SAMPLE_START_DT <- as.POSIXct(PlotData$SAMPLE_START_DT)
PlotData$REMARK_CD[is.na(PlotData$REMARK_CD)] <- "Sample"
PlotData$REMARK_CD <- as.factor(PlotData$REMARK_CD)
PlotData$REMARK_CD = factor(PlotData$REMARK_CD,levels(PlotData$REMARK_CD)[c(4,1:3)])
PlotData$RESULT_VA <- as.numeric(PlotData$RESULT_VA)
TableData <- Tables$DataTable
PlotR(PlotData)
View(TableData)
View(PlotData)
Rep.data <- subset(PlotData, MEDIUM_CD == "WSQ" | MEDIUM_CD == "WGQ")
names(Tables)
Rep.data <- subset(Tables$PlotTable, MEDIUM_CD == "WSQ" | MEDIUM_CD == "WGQ")
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WS" | MEDIUM_CD == "WG"))
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WS" | MEDIUM_CD == "WG")
Rep.data <- subset(Tables$PlotTable, MEDIUM_CD == "WSQ" | MEDIUM_CD == "WGQ")
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WS" | MEDIUM_CD == "WG")
View(PlotData)
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WSQ" | MEDIUM_CD == "WGQ")
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WS" | MEDIUM_CD == "WG")
unique(Tables$PlotTable$MEDIUM_CD)
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WS " | MEDIUM_CD == "WG ")
View(Env.data)
Rep.data$UID <- paste(Rep.data$SITE_NO,Rep.data$SAMPLE_START_DT)
Env.data$UID <- paste(Env.data$SITE_NO,Env.data$SAMPLE_START_DT)
View(Env.data)
STAID.list <- paste("'", STAID, "'", sep="", collapse=",")
# Open the odbc connection
Chan1 <- odbcConnect(DSN)
Query <- paste("select * from ", DSN, ".SITEFILE_01 where site_no IN (", STAID.list, ")", sep="")
SiteFile <- sqlQuery(Chan1, Query, as.is=T)
#get the record numbers
Query <- paste("select * from ", DSN, ".QW_SAMPLE_01 where site_no IN (", STAID.list, ")", sep="")
Samples <- sqlQuery(Chan1, Query, as.is=T)
View(Samples)
class(PlotTable$SAMPLE_START_DT)
class(Rep.data$SAMPLE_START_DT)
source('~/.active-rstudio-document')
DSN <- "NWISCO"
# get station IDs
QWsample <- read.table("PCFF/qwsample.20140801.095520",header=FALSE,colClasses = "character")
#Get staiton IDs
STAID <- QWsample[[2]]
# Set the range of dates in POSIX format, NOT IMPLEMENTED YET
# set BEGIN to "" to retrieve data from the earliest record
# set END to "" to retrieve data to the most current record
BEGIN <- "2014-05-01"
END <- "2014-08-18"
#------ end of user input
#################################
###Pulls data and formats into a readable table and a melted plot table
Tables <- NWISPullR(STAID)
PlotData <- Tables$PlotTable
TableData <- Tables$DataTable
Rep.data <- subset(Tables$PlotTable, MEDIUM_CD == "WSQ" | MEDIUM_CD == "WGQ")
Env.data <- subset(Tables$PlotTable, MEDIUM_CD == "WS " | MEDIUM_CD == "WG ")
Rep.data$UID <- paste(Rep.data$SITE_NO,Rep.data$SAMPLE_START_DT)
Env.data$UID <- paste(Env.data$SITE_NO,Env.data$SAMPLE_START_DT)
class(Rep.data$SAMPLE_START_DT)
Rep.data$SAMPLE_START_DT[1] - Rep.data$SAMPLE_START_DT[2]
View(Rep.data)
Rep.data$UID <- paste(Rep.data$SITE_NO,Rep.data$SAMPLE_START_DT)
Env.data$UID <- paste(Env.data$SITE_NO,Env.data$SAMPLE_START_DT)
join(Rep.data, Env.data, by = "UID")
test <- join(Rep.data, Env.data, by = "UID")
View(test)
?na.approc
?na.approx
library(zoo)
?na.approx
require(shiny)
shiny:::runGist("4009017")
install.packages("shiny")
require(shiny)
shiny:::runGist("4009017")
source('Z:/tmills/Dinero/2014/Spring/SpringNWIS/PlotR-QA.R')
source('Z:/tmills/Dinero/2014/Spring/SpringNWIS/ODBCQWData.R')
source('Z:/tmills/Dinero/2014/Spring/SpringNWIS/Control.R')
PlotR(PlotData)
library(USGSwsQW)
source('~/.active-rstudio-document')
View(Env.data)
