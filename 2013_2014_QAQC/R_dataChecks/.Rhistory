group1 = paste(na.omit(parameters[which(!(na.omit(parameters[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(parameters[which(!(na.omit(parameters[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(parameters[which(!(na.omit(parameters[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(parameters[which(!(na.omit(parameters[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(parameters[which(!(na.omit(parameters[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(parameters[which(!(na.omit(parameters[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(parameters[which(!(na.omit(parameters[,7]) %in% PARM_CD)),7]),collapse = ","),
group8 = paste(na.omit(parameters[which(!(na.omit(parameters[,8]) %in% PARM_CD)),8]),collapse = ","),
group9 = paste(na.omit(parameters[which(!(na.omit(parameters[,9]) %in% PARM_CD)),9]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(parameters))
} else if(ncol(parameters) == 10)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(parameters[which(!(na.omit(parameters[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(parameters[which(!(na.omit(parameters[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(parameters[which(!(na.omit(parameters[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(parameters[which(!(na.omit(parameters[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(parameters[which(!(na.omit(parameters[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(parameters[which(!(na.omit(parameters[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(parameters[which(!(na.omit(parameters[,7]) %in% PARM_CD)),7]),collapse = ","),
group8 = paste(na.omit(parameters[which(!(na.omit(parameters[,8]) %in% PARM_CD)),8]),collapse = ","),
group9 = paste(na.omit(parameters[which(!(na.omit(parameters[,9]) %in% PARM_CD)),9]),collapse = ","),
group10 = paste(na.omit(parameters[which(!(na.omit(parameters[,10]) %in% PARM_CD)),10]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(parameters))
} else(print("To many or to few parameter groups, please check parameter input"))
} else {
missingData <- ddply(checkTable,"RECORD_NO", summarise,
missingParms = paste(parameters[which(!(parameters %in% PARM_CD))],collapse = ","))
}
###Bring in sample meta data
missingData <- join(unique(checkTable[c("RECORD_NO","SITE_NO","STATION_NM","SAMPLE_START_DT","MEDIUM_CD","PROJECT_CD")]),missingData,by="RECORD_NO")
View(missingData)
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE)
parmfile <- parmfile[,c(1:8)]
missingData <- whatData(qw.data=.guiEnv$qw.data,
?whatData
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
QAdata <- .guiEnv$reports
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE)
parmfile <- parmfile[,c(1:8)]
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
library(plyr)
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
searchParms = parmfile
qw.data =.guiEnv$qw.data
searchParms = parmfile
begin.date = "2013-01-01"
end.date="2014-12-31"
groups=TRUE
##get datatable
checkTable <- qw.data$PlotTable
##subset to date range
if(!is.null(begin.date) & !is.null(end.date))
{
checkTable <- subset(checkTable,SAMPLE_START_DT > as.POSIXct(begin.date) & SAMPLE_START_DT < as.POSIXct(end.date))
} else if(!is.null(begin.date) & is.null(end.date))
{
checkTable <- subset(checkTable,SAMPLE_START_DT > as.POSIXct(begin.date))
} else if(is.null(begin.date) & !is.null(end.date))
{
checkTable <- subset(checkTable,SAMPLE_START_DT < as.POSIXct(end.date))
} else{}
###Check for missing searchParms and create list of missing parms by record
if(groups)
{
###Check for missing searchParms by group and create list of missing parms by record
###Brute forcing it for groups. I do not know how to create a dataframe that depends on the number of columns of searchParms. I.e. the number of groups.
if(ncol(searchParms)==1)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(searchParms[which(!(searchParms[,1] %in% PARM_CD)),1],collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
}
else if(ncol(searchParms) == 2)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 3)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 4)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 5)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 6)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 7)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 8)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ","),
group8 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% PARM_CD)),8]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 9)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ","),
group8 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% PARM_CD)),8]),collapse = ","),
group9 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,9]) %in% PARM_CD)),9]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else if(ncol(searchParms) == 10)
{
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ","),
group8 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% PARM_CD)),8]),collapse = ","),
group9 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,9]) %in% PARM_CD)),9]),collapse = ","),
group10 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,10]) %in% PARM_CD)),10]),collapse = ","))
names(missingData) <- c("RECORD_NO",names(searchParms))
} else(print("To many or to few parameter groups, please check parameter input"))
} else {
missingData <- ddply(checkTable,"RECORD_NO", summarise,
missingParms = paste(searchParms[which(!(searchParms %in% PARM_CD))],collapse = ","))
}
###Bring in sample meta data
missingData <- join(unique(checkTable[c("RECORD_NO","SITE_NO","STATION_NM","SAMPLE_START_DT","MEDIUM_CD","PROJECT_CD")]),missingData,by="RECORD_NO")
plyr::ddply
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE)
parmfile <- parmfile[,c(1:8)]
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
source('~/USGS-R/QWToolbox/R/whatData_function.R')
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
?paste
source('~/USGS-R/QWToolbox/R/whatData_function.R')
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
parmPaster <- function(checkTable,searchParms){
checkTable$group1 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ",")
checkTable$group2 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ",")
checkTable$group3 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ",")
checkTable$group4 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ",")
checkTable$group5 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ",")
checkTable$group6 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ",")
checkTable$group7 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ",")
checkTable$group8 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% PARM_CD)),8]),collapse = ",")
}
searchParms <- parmfile
missingData <- ddply(checkTable,"RECORD_NO", parmPaster(searchParms=searchParms))
checkTable <- qw.data$PlotTable
qw.data <- .guiEnv$qw.data
qw.data=.guiEnv$qw.data
searchParms = parmfile
begin.date = "2013-01-01"
end.date="2014-12-31"
groups=TRUE
checkTable <- qw.data$PlotTable
##subset to date range
if(!is.null(begin.date) & !is.null(end.date))
{
checkTable <- subset(checkTable,SAMPLE_START_DT > as.POSIXct(begin.date) & SAMPLE_START_DT < as.POSIXct(end.date))
} else if(!is.null(begin.date) & is.null(end.date))
{
checkTable <- subset(checkTable,SAMPLE_START_DT > as.POSIXct(begin.date))
} else if(is.null(begin.date) & !is.null(end.date))
{
checkTable <- subset(checkTable,SAMPLE_START_DT < as.POSIXct(end.date))
} else{}
missingData <- ddply(checkTable,"RECORD_NO", parmPaster(searchParms=searchParms))
parmPaster <- function(checkTable,searchParms){
checkTable$group1 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% checkTable$PARM_CD)),1]),collapse = ",")
checkTable$group2 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% checkTable$PARM_CD)),2]),collapse = ",")
checkTable$group3 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% checkTable$PARM_CD)),3]),collapse = ",")
checkTable$group4 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% checkTable$PARM_CD)),4]),collapse = ",")
checkTable$group5 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% checkTable$PARM_CD)),5]),collapse = ",")
checkTable$group6 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% checkTable$PARM_CD)),6]),collapse = ",")
checkTable$group7 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% checkTable$PARM_CD)),7]),collapse = ",")
checkTable$group8 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% checkTable$PARM_CD)),8]),collapse = ",")
}
missingData <- ddply(checkTable,"RECORD_NO", parmPaster(searchParms=searchParms))
parmPaster <- function(checkTable,searchParms){
checkTable$group1 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% checkTable$PARM_CD)),1]),collapse = ",")
checkTable$group2 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% checkTable$PARM_CD)),2]),collapse = ",")
checkTable$group3 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% checkTable$PARM_CD)),3]),collapse = ",")
checkTable$group4 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% checkTable$PARM_CD)),4]),collapse = ",")
checkTable$group5 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% checkTable$PARM_CD)),5]),collapse = ",")
checkTable$group6 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% checkTable$PARM_CD)),6]),collapse = ",")
checkTable$group7 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% checkTable$PARM_CD)),7]),collapse = ",")
checkTable$group8 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% checkTable$PARM_CD)),8]),collapse = ",")
}
parmPaster <- function(checkTable,searchParms){
checkTable$group1 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% checkTable$PARM_CD)),1]),collapse = ",")
checkTable$group2 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% checkTable$PARM_CD)),2]),collapse = ",")
checkTable$group3 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% checkTable$PARM_CD)),3]),collapse = ",")
checkTable$group4 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% checkTable$PARM_CD)),4]),collapse = ",")
checkTable$group5 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% checkTable$PARM_CD)),5]),collapse = ",")
checkTable$group6 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% checkTable$PARM_CD)),6]),collapse = ",")
checkTable$group7 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% checkTable$PARM_CD)),7]),collapse = ",")
checkTable$group8 <- paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% checkTable$PARM_CD)),8]),collapse = ",")
}
missingData <- ddply(checkTable,"RECORD_NO", parmPaster(searchParms=searchParms))
missingData <- ddply(checkTable,"RECORD_NO", parmPaster(checkTable=checkTable,searchParms=searchParms))
missingData <- ddply(checkTable,"RECORD_NO", parmPaster)
test <-cbind(checkTable,searchParms)
?join
test <-join(checkTable,searchParms,type="full")
View(test)
records <- unique(checkTable$RECORD_NO)
i <- 100
loopTable <- checkTable[c("RECORD_NO","PARM_CD")]
subData <- subset(loopTable, RECORD_NO == records[i])
subData$group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% subData$PARM_CD)),1]),collapse = ","),
subData$group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% subData$PARM_CD)),1]),collapse = ",")
subData$group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% subData$PARM_CD)),2]),collapse = ",")
subData$group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% subData$PARM_CD)),3]),collapse = ",")
subData$group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% subData$PARM_CD)),4]),collapse = ",")
subData$group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% subData$PARM_CD)),5]),collapse = ",")
subData$group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% subData$PARM_CD)),6]),collapse = ",")
subData$group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% subData$PARM_CD)),7]),collapse = ",")
subData$group8 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% subData$PARM_CD)),8]),collapse = ",")
View(subData)
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
missingData <- ddply(checkTable,"RECORD_NO", summarise,
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ","),
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ","),
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ","),
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ","),
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ","),
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ","),
group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ","),
group8 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% PARM_CD)),8]),collapse = ","))
library(ggplot2)
data(diamonds)
foo <- function(data, fac1, fac2, bar) {
res <- ddply(data, .(fac1, fac2), mean(bar))
res
}
foo(diamonds, "color", "cut", "price")
parmPaster <- function(...)
{
group1 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,1]) %in% PARM_CD)),1]),collapse = ",")
group2 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,2]) %in% PARM_CD)),2]),collapse = ",")
group3 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,3]) %in% PARM_CD)),3]),collapse = ",")
group4 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,4]) %in% PARM_CD)),4]),collapse = ",")
group5 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,5]) %in% PARM_CD)),5]),collapse = ",")
group6 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,6]) %in% PARM_CD)),6]),collapse = ",")
group7 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,7]) %in% PARM_CD)),7]),collapse = ",")
group8 = paste(na.omit(searchParms[which(!(na.omit(searchParms[,8]) %in% PARM_CD)),8]),collapse = ",")
}
?summaryBy
?summarizeBy
library(ggplot2)
?summarizeBy
library(plyr)
?summarizeBy
test <- summaryBy(change ~ sex + condition, data=dataNA, FUN=c(length2,mean,sd), na.rm=TRUE)
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
source('~/USGS-R/QWToolbox/R/whatData_function.R')
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE)
parmfile <- parmfile[,c(1:8)]
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
.globalEnv
.GlobalEnv
rm(checkTable,".GlobalEnv")
rm(searchParms,".GlobalEnv")
source('~/USGS-R/QWToolbox/R/whatData_function.R')
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
?rm
source('~/USGS-R/QWToolbox/R/whatData_function.R')
source('~/USGS-R/QWToolbox/R/whatData_function.R')
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE)
parmfile <- parmfile[,c(1:8)]
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
QAdata <- .guiEnv$reports
repdata <- QAdata$repTable
fildata <- QAdata$wholevpartTable
###Check for missing data
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE)
parmfile <- parmfile[,c(1:8)]
missingData <- whatData_test(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
missingData <- whatData(qw.data=.guiEnv$qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
View(missingData)
View(parmfile)
source('~/.active-rstudio-document')
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
QAdata <- .guiEnv$reports
repdata <- QAdata$repTable
fildata <- QAdata$wholevpartTable
qw.data <-.guiEnv$qw.data
###Check for missing data
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE,na.strings="")
parmfile <- parmfile[,c(1:8)]
missingData <- whatData(qw.data=qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
View(missingData)
write.table("Dinero_2013_2014_missingData.txt",missingData,sep="\t")
?write.table
write.table(missingData,"Dinero_2013_2014_missingData.txt",sep="\t")
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
View(missingData)
plotdata <- qw.data$PlotTable
LSG0 <- subset(plotdata, SITE_NO=="391504106225201" & SAMPLE_START_DT > as.POSIXct("2013-05-01"))
View(LSG0)
data20132014 <- subset(plotdata, SAMPLE_START_DT > as.POSIXct("2013-01-01"))
siteids <- unique(data20132014$SITE_NO)
write.table(siteids,"siteids.txt",sep="\t",row.names=FALSE)
library(devtools)
install_github("USGS-R/QWToolbox",args = "--no-multiarch",build_vignettes = TRUE)
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
QAdata <- .guiEnv$reports
repdata <- QAdata$repTable
fildata <- QAdata$wholevpartTable
qw.data <-.guiEnv$qw.data
plotdata <- qw.data$PlotTable
###Check for missing data
parmfile <- read.csv("parametergroups.csv",colClasses="character",header=TRUE,na.strings="")
parmfile <- parmfile[,c(1:8)]
missingData <- whatData(qw.data=qw.data,
searchParms = parmfile,
begin.date = "2013-01-01",
end.date="2014-12-31",
groups=TRUE)
write.table(missingData,"Dinero_2013_2014_missingData_20150223.txt",sep="\t")
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
x <- seq(1:12)
y <- seq(100:1000)
rm(x)
rm(y)
plodata <-data.frame(x=seq(1:10),y=seq:10:20)
plodata <-data.frame(x=seq(1:10),y=seq(10:20))
plodata <-data.frame(x=seq(1:10),y=seq(10:19))
testplot <-data.frame(x=seq(1:10),y=seq(10:19))
p <- ggplot(data=testplot,aes(x=x,y=y)) + geom_point()
library(ggplot2)
p <- ggplot(data=testplot,aes(x=x,y=y)) + geom_point()
p
View(testplot)
testplot <-data.frame(x=seq(1:10),y=seq(1:10))
p <- ggplot(data=testplot,aes(x=x,y=y)) + geom_point()
p
ggplot_build(p)
data <- ggplot_build(p)
data <- data$data
data <- as.data.frame(data$data)
data <- ggplot_build(p)
data <- as.data.frame(data$data)
View(data)
testplot <-data.frame(a=seq(1:10),b=seq(1:10))
p <- ggplot(data=testplot,aes(x=x,y=y)) + geom_point()
p
data <- ggplot_build(p)
data <- as.data.frame(data$data)
testplot <-data.frame(a=seq(1:10),b=seq(1:10))
p <- ggplot(data=testplot,aes(x=a,y=b)) + geom_point()
p
data <- ggplot_build(p)
data <- as.data.frame(data$data)
View(data)
library(QWToolbox)
templateExport()
library(QWToolbox)
qwtoolbox("AllsiteIDs.csv")
?whatData
plotdata <- qw.data$PlotTable
View(plotdata)
missingiso <- subset(plotdata, RECORD_NO == "01305854")
View(missingiso)
