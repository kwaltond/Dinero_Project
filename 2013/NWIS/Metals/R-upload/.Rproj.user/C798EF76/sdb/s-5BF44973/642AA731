{
    "contents" : "#########################################################\n###########NWIS UploadeR v1.0############################\n###########T. Joe Mills, USGS SCEP#######################\n###########CO WSC, tmills@usgs.gov#######################\n#########################################################\n\n#########################################################\n##########Requires some additional packages##############\n##########install them and initialize here###############\nlibrary(plyr)\nlibrary(RODBC)\nlibrary(reshape2)\n#########################################################\n#########################################################\n#########################################################\n\n\n##########################################################\n#############Read in your data############################\n##########################################################\nlabfile <- \"Labdata.csv\"\npcodefile <- \"pcodefile.csv\"\nDSN <- \"NWISCO\"\n##########################################################\n##########################################################\n##########################################################\n\n#####################################################################\n############Run the function, censoring censors result to reporting\n############limit and applies a \"<\" code, default is TRUE###########\n####################################################################\nnwisupload(DSN,labfile,pcodefile,censor = TRUE)\n#####################################################################\n#####################################################################\n#####################################################################\n\n\n\n\n#############################################################################\n#############This is the function for perofrming hte upload, compile this####\n#############DO NOT TOUCH!!, NO USER EDITS ARE NEEDED BELOW THIS POINT#######\n#############################################################################\nnwisupload <- function(DSN,labfile,pcodefile,censor = TRUE){\n  \n  data<-read.csv(labfile,header=TRUE,\n                 colClasses = c(\"character\",\"character\",\"character\"))\n  pcodedata <- read.csv(pcodefile,header=TRUE,\n                        colClasses = \"character\")\n  \n  STAID <- data[[1]]\n  \n  #Change to a list that SQL can understand. SQL requires a parenthesized list of expressions, so must look like c('05325000', '05330000') for example\n  STAID.list <- paste(\"'\", STAID, \"'\", sep=\"\", collapse=\",\")\n  \n  # Open the odbc connection\n  Chan1 <- odbcConnect(DSN)\n  \n  ##################\n  ###DATABASE 1#####\n  ##################\n  \n  #get the record numbers\n  Query <- paste(\"select * from \", DSN, \".QW_SAMPLE_01 where site_no IN (\", STAID.list, \")\", sep=\"\")\n  Samples <- sqlQuery(Chan1, Query, as.is=T)\n  \n  \n  QWSample1 <- data.frame(Samples$RECORD_NO,\n                          \"*UNSPECIFIED*\",\n                          Samples$AGENCY_CD,\n                          Samples$SITE_NO,\n                          strftime(as.POSIXct(Samples$SAMPLE_START_DT,),\"%Y%m%d%H%M\"),\n                          strftime(as.POSIXct(Samples$SAMPLE_END_DT),\"%Y%m%d%H%M\"),\n                          Samples$MEDIUM_CD,\n                          Samples$LAB_NO,\n                          Samples$PROJECT_CD,\n                          Samples$AQFR_CD,\n                          Samples$SAMP_TYPE_CD,\n                          Samples$ANL_STAT_CD,\n                          \"\",\n                          Samples$HYD_COND_CD,\n                          Samples$HYD_EVENT_CD,\n                          Samples$TU_ID,\n                          Samples$BODY_PART_ID,\n                          \"\",\n                          \"\",\n                          \"\",\n                          \"\",\n                          Samples$COLL_ENT_CD)\n  ##################\n  ###DATABASE 2#####\n  ##################\n  \n  #get the record numbers\n  Query <- paste(\"select * from \", DSN, \".QW_SAMPLE_02 where site_no IN (\", STAID.list, \")\", sep=\"\")\n  Samples <- sqlQuery(Chan1, Query, as.is=T)\n  \n  \n  QWSample2 <- data.frame(Samples$RECORD_NO,\n                          \"*UNSPECIFIED*\",\n                          Samples$AGENCY_CD,\n                          Samples$SITE_NO,\n                          strftime(as.POSIXct(Samples$SAMPLE_START_DT,),\"%Y%m%d%H%M\"),\n                          strftime(as.POSIXct(Samples$SAMPLE_END_DT),\"%Y%m%d%H%M\"),\n                          Samples$MEDIUM_CD,\n                          Samples$LAB_NO,\n                          Samples$PROJECT_CD,\n                          Samples$AQFR_CD,\n                          Samples$SAMP_TYPE_CD,\n                          Samples$ANL_STAT_CD,\n                          \"\",\n                          Samples$HYD_COND_CD,\n                          Samples$HYD_EVENT_CD,\n                          Samples$TU_ID,\n                          Samples$BODY_PART_ID,\n                          \"\",\n                          \"\",\n                          \"\",\n                          \"\",\n                          Samples$COLL_ENT_CD)\n  \n  QWSample <- rbind(QWSample1,QWSample2)\n  QWSampleheader <- c(\"sample.integer\",  \"user.code\",  \"agency\",  \"site.no\",  \"start.date\",\t\"end.date\",\t\"medium\",\t\"labid\",\n                      \"project.code\",\t\"aquifer.code\",\t\"sample.type\",\t\"analysis.status\",\t\"analysis.source\",\t\"hydrologic.cond\",\n                      \"hydrologic.event\",\t\"tissue\",\t\"body.part\",\t\"lab.comment.\",\t\"field.comment\",\t\"time.datum\",\t\"datum.reliability\",\n                      \"collecting.agency.code\")\n  colnames(QWSample)<-QWSampleheader\n  QWSample$sample.integer <- paste(QWSample$site.no,QWSample$start.date,QWSample$medium,sep=\"\")\n  \n  \n\n  meltdata<-melt(data,id.vars=colnames(data[,1:4]))\n  meltdata$variable <- (gsub(\"X\", \"\", meltdata$variable))\n  colnames(meltdata) <- c(\"USGS.SID\" , \"Sample.date..yyyymmdd.\",\t\"Sample.time..hhmm.\",\t\"medium\",\"pcode\",\t\"result\")\n  meltdata$sample.integer <- paste(meltdata$USGS.SID,meltdata$Sample.date..yyyymmdd.,meltdata$Sample.time..hhmm.,meltdata$medium,sep=\"\")\n  meltdata$result <- as.character(meltdata$result)\n  meltdata$result <- as.numeric(meltdata$result)\n  mergeddata <- (join(meltdata, pcodedata, by = 'pcode'))\n  mergeddata$reporting.level <- as.numeric(mergeddata$reporting.level)\n  \n  qwresult <- matrix(nrow=nrow(mergeddata),ncol=20)\n  qwresult[,1]<-mergeddata$sample.integer\n  qwresult[,2]<-mergeddata$pcode\n  qwresult[,3]<-mergeddata$result\n  if (censor){\n    for (i in 1:nrow(mergeddata)){\n      if(mergeddata$result[i] <= mergeddata$reporting.level[i]){\n        qwresult[i,3]<- mergeddata$reporting.level[i]\n        qwresult[i,4]<- \"<\"\n      } else{}\n    }\n  } else if(!censor){\n    qwresult[,4]<- \"\"\n  }\n  qwresult[,5]<-mergeddata$qa.code\n  qwresult[,6]<-mergeddata$method.code\n  qwresult[,7]<-mergeddata$rounding.code\n  qwresult[,8]<-mergeddata$qualifiers\n  qwresult[,9]<-mergeddata$reporting.level\n  qwresult[,10]<-mergeddata$reporting.level.type\n  qwresult[,11]<-mergeddata$dqi.code\n  qwresult[,12]<-mergeddata$null.value.qualifier\n  qwresult[,13]<-mergeddata$prep.set.no\n  qwresult[,14]<-mergeddata$analytical.set.no\n  qwresult[,15]<-mergeddata$analysis.date\n  qwresult[,16]<-mergeddata$prep.date\n  qwresult[,17]<-mergeddata$lab.comment\n  qwresult[,18]<-mergeddata$field.comment\n  qwresult[,19]<-mergeddata$lab.stdev\n  qwresult[,20]<-mergeddata$analyzing.entity.code\n  \n  write.table(QWSample,file=\"qwsample\",sep=\"\\t\", col.names = F, row.names = F,na=\"\")\n  write.table(qwresult,file=\"qwresult\",sep=\"\\t\", col.names = F, row.names = F, na=\"\")\n}\n\n",
    "created" : 1408652959698.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3620801375",
    "id" : "642AA731",
    "lastKnownWriteTime" : 1408654680,
    "path" : "Z:/tmills/Dinero/2013/NWIS/Metals/R-upload/NWISUploadRv11(20140821).R",
    "project_path" : "NWISUploadRv11(20140821).R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}