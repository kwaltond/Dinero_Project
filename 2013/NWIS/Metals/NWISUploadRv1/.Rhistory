PortalData <- read.csv("C:/Users/T. Joe Mills/Dropbox/USGS/Dinero/EMMA/DT/PortalData.csv", header=T, na.strings="NA")#Cannot have NA values for any of these tests, so make sure no NA, <, or > values. < values were censored to 2/3 the detc limit. Make sure your data has headers
EMData <- read.csv("C:/Users/T. Joe Mills/Dropbox/USGS/Dinero/EMMA/DT/EMData.csv", header=T, na.strings="NA")#Cannot have NA values for any of these tests, so make sure no NA, <, or > values. < values were censored to 2/3 the detc limit. Make sure your data has headers
AllData <- rbind(PortalData,EMData)
Tracers <- c("Calcium.f","Magnesium.f","Strontium.f","Manganese.f","Zinc.f","Sulfate.f")
AllDataTracers <- AllData[Tracers]
View(AllDataTracers)
library(ggplot2)
ggplot(data=AllDataTracers,aes(Sulfate.f,Calcium.F)) + geom_point
ggplot(data=AllDataTracers,aes(Sulfate.f,Calcium.F)) + geom_point()
ggplot(data=AllDataTracers,aes(Sulfate.f,Calcium.f)) + geom_point()
ggplot(data=AllDataTracers,aes(Sulfate.f,Calcium.f),xlim=(2000,0)) + geom_point()
ggplot(data=AllDataTracers,aes(Sulfate.f,Calcium.f),xlim=(2000:0)) + geom_point()
View(AllDataTracers)
View(AllData)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f),group=ShortName) + geom_point()
View(AllData)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,group=ShortName)) + geom_point()
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,Group=ShortName)) + geom_point()
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point()
ggplot(data=AllData,aes(Sulfate.f,Zinc.f,colour=ShortName)) + geom_point()
ggplot(data=AllData,aes(Sulfate.f,Zinc.f,colour=ShortName)) + geom_point() + geom_abline(intercept=0,slope=1)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + geom_abline(intercept=0,slope=1)
MixVec <- c(0:1:0.1)
MixVec <- seq(0,1,0.1)
fix(MixVec)
Caconc <- (median(AllData$Sulfate.f[which(ShortName =="DINEROBULKHEADSPIGOTAT")]))
Caconc <- (median(AllData$Sulfate.f[which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")]))
SO4conc <- (max(AllData$Sulfate.f[which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")]))
for (i in 1:11){
SO4conc <- max(AllData$Sulfate.f[which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData$Sulfate.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
for (i in 1:11){
SO4conc[i] <- max(AllData$Sulfate.f[which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData$Sulfate.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
fix(SO4conc)
for (i in 1:11){
SO4conc[i] <- max(AllData$Sulfate.f[which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData$Sulfate.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
Caconc[i] <- max(AllData$Calcium.f[which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData$Calcium.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
mixingline<- lm(Caconc~SO4conc)
mixingline$coeeficients
fix(mixingline)
names(mixingline)
mixingline$coefficients
summary(mixingline)
mixingline<- lm(Caconc~SO4conc)
summary(mixingline)
mixingline$coefficients
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + geom_abline(mixingline$coefficients)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() #+ geom_abline(mixingline$coefficients)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + geom_abline(mixingline$coefficients)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + geom_abline(slope=0.13,intercept=8.07)
for (i in 1:11){
SO4conc[i] <- max(AllData$Sulfate.f[which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData$Sulfate.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
Caconc[i] <- max(AllData$Calcium.f[which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData$Calcium.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + stat_smooth(SO4conc,Caconc,method="lm", se=FALSE)#geom_abline(slope=0.13,intercept=8.07)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + geom_abline(slope=mixingline$coefficients[2],intercept=mixingline$coefficients[1])
for (i in 1:11){
SO4conc[i] <- max(AllData$Sulfate.f[which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData$Sulfate.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
Caconc[i] <- max(AllData$Calcium.f[which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData$Calcium.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
mixingline<- lm(Caconc~SO4conc)
ggplot(data=AllData,aes(Sulfate.f,Calcium.f,colour=ShortName)) + geom_point() + geom_abline(slope=mixingline$coefficients[2],intercept=mixingline$coefficients[1])
for (i in 1:11){
SO4conc[i] <- max(AllData$Sulfate.f[which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData$Sulfate.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
Mgconc[i] <- max(AllData$Magnesium.f[which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData$Magnesium.f[which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
mxinxConcs <- matrix(nrow=10,ncol=ncol(AllData))
mixConcs <- matrix(nrow=10,ncol=ncol(AllData))
colnames(mixConcs) <- colnames(AllData[7:21])
colnames(mixConcs[1:15]) <- colnames(AllData[7:21])
View(AllData)
colnames(AllData[7:21])
mixConcs <- matrix(nrow=10,ncol=15)
colnames(mixConcs) <- colnames(AllData[7:21])
mixdata <- AllData[7:21]
for (k in 1:15){
for (i in 1:11){
mixConcs[i,k+6] <- max(AllData[k][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[$Sulfate.f[k][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
for (k in 1:15){
for (i in 1:11){
mixConcs[i,k+6] <- max(AllData[k][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[k][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
View(AllData)
for (k in 1:15){
for (i in 1:11){
mixConcs[i,k+6] <- max(AllData[,k][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
max(AllData[,k][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])
(AllData[,k][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
for (k in 1:15){
for (i in 1:11){
mixConcs[i,k] <- max(AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])
AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")]
View(AllData)
for (k in 1:15){
AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")]
}
for (k in 1:15){
test<-AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")]
}
fix(test)
for (k in 1:13){
for (i in 1:11){
mixConcs[i,k] <- max(AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
for (k in 1:13){
test[,k]<-AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")]
}
for (i in 1:11){
mixConcs[i,k] <- max(AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
for (i in 1:11){
mixConcs[i,k] <- max(AllData[,k][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
for (i in 1:11){
mixConcs[i,k] <- max(AllData[,10][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,10][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
for (i in 1:11){
mixConcs[i,10] <- max(AllData[,10][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,10][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
View(mxinxConcs)
for (i in 1:11){
mixConcs[i,10] <- max(AllData[,10][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,10][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
x
mixConcs <- matrix(nrow=11,ncol=15)
for (i in 1:11){
mixConcs[i,10] <- max(AllData[,10][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,10][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
for (k in 1:13){
for (i in 1:11){
mixConcs[i,k] <- max(AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
View(mxinxConcs)
View(mixConcs)
colnames(mixConcs) <- colnames(AllData[7:21])
View(mxinxConcs)
View(mixConcs)
mixConcsSTRUCTURE <- matrix(nrow=11,ncol=15)
colnames(mixConcsStructure) <- colnames(AllData[7:21])
mixConcsStructure <- matrix(nrow=11,ncol=15)
colnames(mixConcsStructure) <- colnames(AllData[7:21])
PortalData <- read.csv("C:/Users/T. Joe Mills/Dropbox/USGS/Dinero/EMMA/DT/PortalData.csv", header=T, na.strings="NA")#Cannot have NA values for any of these tests, so make sure no NA, <, or > values. < values were censored to 2/3 the detc limit. Make sure your data has headers
EMData <- read.csv("C:/Users/T. Joe Mills/Dropbox/USGS/Dinero/EMMA/DT/EMData.csv", header=T, na.strings="NA")#Cannot have NA values for any of these tests, so make sure no NA, <, or > values. < values were censored to 2/3 the detc limit. Make sure your data has headers
AllData <- rbind(PortalData,EMData)
Tracers <- c("Calcium.f","Magnesium.f","Strontium.f","Manganese.f","Zinc.f","Sulfate.f")
AllDataTracers <- AllData[Tracers]
MixVec <- seq(0,1,0.1)
mixConcsSpigot <- matrix(nrow=11,ncol=15)
mixConcsStructure <- matrix(nrow=11,ncol=15)
colnames(mixConcsSpigot) <- colnames(AllData[7:21])
colnames(mixConcsStructure) <- colnames(AllData[7:21])
for (k in 1:13){
for (i in 1:11){
mixConcsSpigot[i,k] <- max(AllData[,k+6][which(AllData$ShortName =="DINEROBULKHEADSPIGOTAT")])*(MixVec[i]) +
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
for (k in 1:13){
for (i in 1:11){
mixConcsStructure[i,k] <- max(AllData[,k+6][which(AllData$ShortName =="STRUCTURE")])*(MixVec[i]) +
(min(AllData[,k+6][which(AllData$ShortName =="DRIPPER")]))*(1-MixVec[i])
}
}
View(mixConcsStructure)
View(mixConcsStructure)
library("USGSwsGraphs", lib.loc="C:/Users/T. Joe Mills/Documents/R/win-library/3.0")
View(mixConcsSpigot)
AA.bp <- colorPlot(AllData$Sulfate.f,AllData$Calcium.f, color = ShortName)
AA.bp <- colorPlot(AllData$Sulfate.f,AllData$Calcium.f, color = AllData$ShortName)
warnings()
mixinglinespigot<- lm(mixConcSpigot$Calcium.f~mixConcSpigot$Sulfate.f)
mixinglinespigot<- lm(mixConcsSpigot$Calcium.f~mixConcSpigot$Sulfate.f)
mixinglinespigot<- lm(mixConcsSpigot$Calcium.f~mixConcsSpigot$Sulfate.f)
View(mixConcsSpigot)
mixinglinespigot<- lm(mixConcsSpigot$Calcium.f~mixConcsSpigot$Sulfate.f)
mixConcsSpigot$Calcium.f
mixConcsStructure <- as.data.frame(mixConcsStructure)
mixConcsSpigot <- as.data.frame(mixConcsSpigot)
mixinglinespigot<- lm(mixConcsSpigot$Calcium.f~mixConcsSpigot$Sulfate.f)
LO1 <- setLayout(num.cols=2, num.rows=4,num.graphs = 7,explanation=list(grid=8) )
AA.gr <- setGraph(1, LO1)
AA.bp <- colorPlot(AllData$Sulfate.f,AllData$Calcium.f, color = AllData$ShortName)
yaxis.log = TRUE,ytitle = "Manganese (µg/l)", margin = AA.gr)
AA.gr <- setGraph(1, LO1)
LO1 <- setLayout(num.cols=2, num.rows=4,num.graphs = 7,explanation=list(grid=8) )
LO1 <- setLayout(num.cols=2, num.rows=4,num.graphs = 7,explanation=list(grid=8) )
setSweave("C:/Users/Joe Mills/Dropbox/USGS/Dinero/EMMA/DT/mixinglines",8.5,11, font="USGS")
setSweave("C:/Users/T. Joe Mills/Dropbox/USGS/Dinero/EMMA/DT/mixinglines",8.5,11, font="USGS")
LO1 <- setLayout(num.cols=2, num.rows=4,num.graphs = 7,explanation=list(grid=8) )
AA.gr <- setGraph(1, LO1)
AA.bp <- colorPlot(AllData$Sulfate.f,AllData$Calcium.f, color = AllData$ShortName)
yaxis.log = TRUE,ytitle = "Manganese (µg/l)", margin = AA.gr)
AA.bp <- colorPlot(AllData$Sulfate.f,AllData$Calcium.f, color = AllData$ShortName)
dev.off()
dev.off()
AA.bp <- colorPlot(AllData$Sulfate.f,AllData$Calcium.f, color = AllData$ShortName)
mixinglinespigot<- lm(mixConcsSpigot$Calcium.f~mixConcsSpigot$Sulfate.f)
AA.pl <- refLine(coef=coefficients(mixinglinespigot))
#############################################################################
#############This is the function for perofrming hte upload, compile this####
#############DO NOT TOUCH!!, NO USER EDITS ARE NEEDED BELOW THIS POINT#######
#############################################################################
nwisupload <- function(datapath,pcodepath,qwsamplepath,outputpath,censor = TRUE){
qwsample <- read.table (qwsamplepath,sep="\t", header=FALSE)
data<-read.csv(datapath,header=TRUE,
colClasses = c("character","character","character"))
pcodedata <- read.csv(pcodepath,header=TRUE,
colClasses=c("character","character","character","character","character","numeric","character",
"character","character","character","character","character","character",
"character","character","character","character"))
###Creat a unique sample integer in the QWsample out of SID, date, time
qwsampleheader <- c("sample.integer",  "user.code",  "agency",	"site.no",	"start.date",	"end.date",	"medium",	"labid",
"project.code",	"aquifer.code",	"sample.type",	"analysis.status",	"analysis.source",	"hydrologic.cond",
"hydrologic.event",	"tissue",	"body.part",	"lab.comment.",	"field.comment",	"time.datum",	"datum.reliability",
"collecting.agency.code")
colnames(qwsample)<-qwsampleheader
qwsample$sample.integer <- paste(qwsample$site.no,qwsample$start.date,qwsample$medium,sep="")
################################################################################
meltdata<-melt(data,id.vars=colnames(data[,1:4]))
meltdata$variable <- (gsub("X", "", meltdata$variable))
colnames(meltdata) <- c("USGS.SID" , "Sample.date..yyyymmdd.",	"Sample.time..hhmm.",	"medium","pcode",	"result")
meltdata$sample.integer <- paste(meltdata$USGS.SID,meltdata$Sample.date..yyyymmdd.,meltdata$Sample.time..hhmm.,meltdata$medium,sep="")
meltdata$result <- as.character(meltdata$result)
meltdata$result <- as.numeric(meltdata$result)
mergeddata <- (join(meltdata, pcodedata, by = 'pcode'))
qwresult <- matrix(nrow=nrow(mergeddata),ncol=20)
qwresult[,1]<-mergeddata$sample.integer
qwresult[,2]<-mergeddata$pcode
qwresult[,3]<-mergeddata$result
if (censor){
for (i in 1:nrow(mergeddata)){
if(mergeddata$result[i] <= mergeddata$reporting.level[i]){
qwresult[i,3]<- mergeddata$reporting.level[i]
qwresult[i,4]<- "<"
} else{}
}
} else if(!censor){
qwresult[,4]<- ""
}
qwresult[,5]<-mergeddata$qa.code
qwresult[,6]<-mergeddata$method.code
qwresult[,7]<-mergeddata$rounding.code
qwresult[,8]<-mergeddata$qualifiers
qwresult[,9]<-mergeddata$reporting.level
qwresult[,10]<-mergeddata$reporting.level.type
qwresult[,11]<-mergeddata$dqi.code
qwresult[,12]<-mergeddata$null.value.qualifier
qwresult[,13]<-mergeddata$prep.set.no
qwresult[,14]<-mergeddata$analytical.set.no
qwresult[,15]<-mergeddata$analysis.date
qwresult[,16]<-mergeddata$prep.date
qwresult[,17]<-mergeddata$lab.comment
qwresult[,18]<-mergeddata$field.comment
qwresult[,19]<-mergeddata$lab.stdev
qwresult[,20]<-mergeddata$analyzing.entity.code
write.table(qwsample,file=paste(outputpath,"/qwsample",sep=""),sep="\t", col.names = F, row.names = F)
write.table(qwresult,file=paste(outputpath,"/qwresult",sep=""),sep="\t", col.names = F, row.names = F)
}
